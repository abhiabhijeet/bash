echo "1.3.4.5" | grep -o "[0-9]\{1,2\}.[0-9]\{1,2\}.[0-9]\{1,2\}-[0-9]\{1,2\}"

free | grep ^Mem: | awk '{mem_usage=($3*100)/$2} END {print mem_usage}'
grep 'cpu ' /proc/stat | awk '{cpu_usage=($2+$4)*100/($2+$4+$5)} END {print cpu_usage "%"}'

awk -F' ' '{if($6>400)print $6}'

bq query --use_legacy_sql=false 'ALTER TABLE `project_name`.'$dataset'.'$line' SET OPTIONS (partition_expiration_days='$days');'

find with time
sed -E '/2022-04-06T(10:[0-5][0-9]:[0-5][0-9]|11:00:00)/!d'


nc -zv "$host" "$port" && echo "opened"


##generate uniq number
shuf -i 11000-65000 -n 1

##Convert xlsx files to csv via command line
ssconvert -S file.xlsx file.csv
https://linuxconfig.org/converting-xlsx-excel-format-files-to-csv-on-linux

DBQuery.shellBatchSize = 5000
db.getCollection(name).aggregate([ {$group : {"_id" : "$columnname"  count : {$sum : 1}}} ])
db.coll_name.distinct("hashCol" {file_name:{$regex:"/2019/07/22/"}})

db.getCollection('coll_name').find({},{_id:1, "field1":1}).forEach(function(doc){print(doc._id + ";" +doc.field1)})

git branch --contains a7b46ad43fbe3bcc74d6db26e6f53c3c9fa731ee
this will give branch name for this commit id

